[{"/Users/young/Desktop/Volunteer-HoC/HoC-frontend/src/App.js":"1","/Users/young/Desktop/Volunteer-HoC/HoC-frontend/src/pages/UserApplyPage.jsx":"2","/Users/young/Desktop/Volunteer-HoC/HoC-frontend/src/components/post/UserApply.jsx":"3","/Users/young/Desktop/Volunteer-HoC/HoC-frontend/src/components/post/PostList.jsx":"4","/Users/young/Desktop/Volunteer-HoC/HoC-frontend/src/components/post/Write.jsx":"5","/Users/young/Desktop/Volunteer-HoC/HoC-frontend/src/lib/api/MapContainer.js":"6","/Users/young/Desktop/Volunteer-HoC/HoC-frontend/src/containers/post/UserApplyForm.js":"7","/Users/young/Desktop/Volunteer-HoC/HoC-frontend/src/containers/post/PostListForm.js":"8","/Users/young/Desktop/Volunteer-HoC/HoC-frontend/src/contexts/list.js":"9","/Users/young/Desktop/Volunteer-HoC/HoC-frontend/src/containers/post/WritePageForm.js":"10"},{"size":2210,"mtime":1611039343592,"results":"11","hashOfConfig":"12"},{"size":184,"mtime":1610978963622,"results":"13","hashOfConfig":"12"},{"size":3623,"mtime":1611039658427,"results":"14","hashOfConfig":"12"},{"size":1998,"mtime":1611031265526,"results":"15","hashOfConfig":"12"},{"size":7012,"mtime":1610984800396,"results":"16","hashOfConfig":"12"},{"size":1501,"mtime":1610985825689,"results":"17","hashOfConfig":"12"},{"size":731,"mtime":1611038602853,"results":"18","hashOfConfig":"12"},{"size":1063,"mtime":1611038786453,"results":"19","hashOfConfig":"12"},{"size":967,"mtime":1611039269466,"results":"20","hashOfConfig":"12"},{"size":1812,"mtime":1610987541272,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1e95jvr",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"/Users/young/Desktop/Volunteer-HoC/HoC-frontend/src/App.js",["45","46","47","48"],"/Users/young/Desktop/Volunteer-HoC/HoC-frontend/src/pages/UserApplyPage.jsx",[],"/Users/young/Desktop/Volunteer-HoC/HoC-frontend/src/components/post/UserApply.jsx",[],"/Users/young/Desktop/Volunteer-HoC/HoC-frontend/src/components/post/PostList.jsx",[],"/Users/young/Desktop/Volunteer-HoC/HoC-frontend/src/components/post/Write.jsx",[],"/Users/young/Desktop/Volunteer-HoC/HoC-frontend/src/lib/api/MapContainer.js",[],"/Users/young/Desktop/Volunteer-HoC/HoC-frontend/src/containers/post/UserApplyForm.js",["49"],"import React, { useContext } from 'react';\nimport UserApply from '../../components/post/UserApply';\nimport { Auth, List, Post } from '../../contexts/store';\n\nconst UserApplyForm = () => {\n  const url = window.location.pathname;\n  const parse = url.split('/');\n  // console.log(parse);\n  const { AuthState } = useContext(Auth);\n  const { ListState } = useContext(List);\n  const { PostState } = useContext(Post)\n  // console.log(ListState.lists);\n\n  const post = ListState.lists.find(\n    list => list._id === parse[parse.length - 1]\n  );\n  // console.log(post.address);\n  console.log(ListState);\n  console.log(post);\n\n  return <UserApply AuthState={AuthState} post={post} ListState={ListState} />;\n};\n\nexport default UserApplyForm;\n","/Users/young/Desktop/Volunteer-HoC/HoC-frontend/src/containers/post/PostListForm.js",["50","51","52"],"import React, { useCallback, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { Auth, List, Post } from '../../contexts/store';\nimport PostList from '../../components/post/PostList';\n\nimport { POST_FAIL, POST_LOADING, POST_SUCCESS } from '../../contexts/list';\n\nconst PostListForm = () => {\n  const { AuthState } = useContext(Auth);\n\n  const { ListState, ListDispatch } = useContext(List);\n\n  const fetchList = async () => {\n    await ListDispatch({\n      type: POST_LOADING,\n      loading: true,\n    });\n    try {\n      const response = await axios.get('http://localhost:3000/api/posts');\n      \n      await ListDispatch({\n        type: POST_SUCCESS,\n        data: response.data,\n      });\n      console.log(response.data);\n      console.log(ListState);\n      // console.log(response);\n      \n      \n    } catch (e) {\n      await ListDispatch({\n        type: POST_FAIL,\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchList();\n  }, []);\n\n  return <PostList AuthState={AuthState} ListState={ListState} />;\n};\nexport default PostListForm;\n","/Users/young/Desktop/Volunteer-HoC/HoC-frontend/src/contexts/list.js",[],"/Users/young/Desktop/Volunteer-HoC/HoC-frontend/src/containers/post/WritePageForm.js",["53","54","55","56","57","58"],"import React, { useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  AUTHSTATE_INPUT_VALUE,\n  CHANGE_FIELD,\n  POST_SUCCESS,\n  POST_FAIL,\n  CANCEL_SUCCESS,\n  CANCEL_FAIL,\n} from '../../contexts/write';\nimport { Auth, Post } from '../../contexts/store';\nimport Write from '../../components/post/Write';\nconst WritePageForm = () => {\n  const { AuthState } = useContext(Auth);\n  const { PostState, PostDispatch } = useContext(Post);\n  // console.log(AuthState);\n  // console.log(PostState);\n\n\n  const post = async () => {\n    try {\n    const response =  await axios.post(\n      'http://localhost:3000/api/posts',\n       {\n          title: PostState.posts.title,\n          body: PostState.posts.body,\n          address: PostState.posts.address,\n          periodstart: PostState.posts.periodstart,\n          periodend: PostState.posts.periodend,\n          gender:PostState.posts.gender,\n          phoneNumber: PostState.posts.phoneNumber,\n          number:PostState.posts.number,\n          companyName:PostState.posts.companyName,\n        }\n      )\n    // console.log(response);\n    \n\n    } catch(error) {\n      console.log(error);\n    }\n  }\n  const onChange = e => {\n    // console.log(e.target.value);\n    // console.log(e.target.name);\n    \n    const {value, name} = e.target;\n    PostDispatch({\n      type:CHANGE_FIELD,\n      key: name,\n      value,\n    });    \n  };\n\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    post();\n  };\n\n  useEffect(() => {\n    PostDispatch({\n      type:AUTHSTATE_INPUT_VALUE,\n      address: AuthState.company.address,\n      companyName:AuthState.company.companyName,\n      phoneNumber:AuthState.company.phoneNumber,\n    })\n  }, [])\n\n  return <Write AuthState={AuthState} onChange={onChange} onSubmit={onSubmit}/>;\n};\nexport default WritePageForm;\n\n\n\n\n",{"ruleId":"59","severity":1,"message":"60","line":3,"column":8,"nodeType":"61","messageId":"62","endLine":3,"endColumn":17},{"ruleId":"59","severity":1,"message":"63","line":10,"column":16,"nodeType":"61","messageId":"62","endLine":10,"endColumn":23},{"ruleId":"59","severity":1,"message":"64","line":13,"column":10,"nodeType":"61","messageId":"62","endLine":13,"endColumn":24},{"ruleId":"59","severity":1,"message":"65","line":13,"column":26,"nodeType":"61","messageId":"62","endLine":13,"endColumn":40},{"ruleId":"59","severity":1,"message":"66","line":11,"column":11,"nodeType":"61","messageId":"62","endLine":11,"endColumn":20},{"ruleId":"59","severity":1,"message":"67","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":28},{"ruleId":"59","severity":1,"message":"68","line":3,"column":22,"nodeType":"61","messageId":"62","endLine":3,"endColumn":26},{"ruleId":"69","severity":1,"message":"70","line":39,"column":6,"nodeType":"71","endLine":39,"endColumn":8,"suggestions":"72"},{"ruleId":"59","severity":1,"message":"73","line":6,"column":3,"nodeType":"61","messageId":"62","endLine":6,"endColumn":15},{"ruleId":"59","severity":1,"message":"74","line":7,"column":3,"nodeType":"61","messageId":"62","endLine":7,"endColumn":12},{"ruleId":"59","severity":1,"message":"75","line":8,"column":3,"nodeType":"61","messageId":"62","endLine":8,"endColumn":17},{"ruleId":"59","severity":1,"message":"76","line":9,"column":3,"nodeType":"61","messageId":"62","endLine":9,"endColumn":14},{"ruleId":"59","severity":1,"message":"77","line":22,"column":11,"nodeType":"61","messageId":"62","endLine":22,"endColumn":19},{"ruleId":"69","severity":1,"message":"78","line":68,"column":6,"nodeType":"71","endLine":68,"endColumn":8,"suggestions":"79"},"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Loading' is defined but never used.","'LoadingReducer' is defined but never used.","'LoadingInitial' is defined but never used.","'PostState' is assigned a value but never used.","'useCallback' is defined but never used.","'Post' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchList'. Either include it or remove the dependency array.","ArrayExpression",["80"],"'POST_SUCCESS' is defined but never used.","'POST_FAIL' is defined but never used.","'CANCEL_SUCCESS' is defined but never used.","'CANCEL_FAIL' is defined but never used.","'response' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'AuthState.company.address', 'AuthState.company.companyName', 'AuthState.company.phoneNumber', and 'PostDispatch'. Either include them or remove the dependency array.",["81"],{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},"Update the dependencies array to be: [fetchList]",{"range":"86","text":"87"},"Update the dependencies array to be: [AuthState.company.address, AuthState.company.companyName, AuthState.company.phoneNumber, PostDispatch]",{"range":"88","text":"89"},[958,960],"[fetchList]",[1689,1691],"[AuthState.company.address, AuthState.company.companyName, AuthState.company.phoneNumber, PostDispatch]"]