[{"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/contexts/list.js":"1","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/containers/post/WritePageForm.js":"2","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/post/Write.jsx":"3","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/post/MyPost.jsx":"4","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/containers/post/MyPageContainer.js":"5","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/App.js":"6","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/containers/post/PostListForm.js":"7","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/post/UserApply.jsx":"8","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/containers/post/ModifyForm.js":"9","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/contexts/write.js":"10","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/contexts/auth.js":"11","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/contexts/store.js":"12","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/lib/api/AddressApi.js":"13","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/pages/DivisionPage.jsx":"14","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/pages/UserApplyPage.jsx":"15","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/containers/post/UserApplyForm.js":"16","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/auth/AuthTemplate.jsx":"17","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/lib/api/MapContainer.js":"18","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/auth/Register.jsx":"19","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/common/AskModal.js":"20","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/post/PostList.jsx":"21","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/containers/auth/RegisterForm.js":"22","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/index.js":"23","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/common/Container.js":"24","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/pages/LoginPage.jsx":"25","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/pages/RegisterPage.jsx":"26","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/pages/MyPage.jsx":"27","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/common/Header.js":"28","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/common/Responsive.js":"29","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/pages/WritePage.jsx":"30","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/post/AskAddressModal.jsx":"31","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/common/AddressModal.js":"32","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/pages/PostListPage.jsx":"33","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/lib/api/email.js":"34","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/lib/styles/palette.js":"35","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/lib/api/auth.js":"36","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/pages/ModifyPage.jsx":"37","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/auth/Login.jsx":"38","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/containers/auth/LoginForm.js":"39"},{"size":720,"mtime":1611121134988,"results":"40","hashOfConfig":"41"},{"size":2532,"mtime":1611229725287,"results":"42","hashOfConfig":"41"},{"size":7859,"mtime":1611206060222,"results":"43","hashOfConfig":"41"},{"size":1766,"mtime":1611211933218,"results":"44","hashOfConfig":"41"},{"size":687,"mtime":1611122409536,"results":"45","hashOfConfig":"41"},{"size":2396,"mtime":1611217803628,"results":"46","hashOfConfig":"41"},{"size":984,"mtime":1611208511254,"results":"47","hashOfConfig":"41"},{"size":4675,"mtime":1611232512115,"results":"48","hashOfConfig":"41"},{"size":2695,"mtime":1611206598046,"results":"49","hashOfConfig":"41"},{"size":1680,"mtime":1611227457501,"results":"50","hashOfConfig":"41"},{"size":2838,"mtime":1611225471467,"results":"51","hashOfConfig":"41"},{"size":192,"mtime":1611060733054,"results":"52","hashOfConfig":"41"},{"size":1009,"mtime":1611215806417,"results":"53","hashOfConfig":"41"},{"size":648,"mtime":1611024933816,"results":"54","hashOfConfig":"41"},{"size":184,"mtime":1611036899227,"results":"55","hashOfConfig":"41"},{"size":1600,"mtime":1611232366436,"results":"56","hashOfConfig":"41"},{"size":1040,"mtime":1610184818210,"results":"57","hashOfConfig":"41"},{"size":1505,"mtime":1611111498333,"results":"58","hashOfConfig":"41"},{"size":4327,"mtime":1611224415345,"results":"59","hashOfConfig":"41"},{"size":1360,"mtime":1611211137910,"results":"60","hashOfConfig":"41"},{"size":2360,"mtime":1611140774677,"results":"61","hashOfConfig":"41"},{"size":3610,"mtime":1611225319103,"results":"62","hashOfConfig":"41"},{"size":593,"mtime":1610177809272,"results":"63","hashOfConfig":"41"},{"size":578,"mtime":1610861936918,"results":"64","hashOfConfig":"41"},{"size":273,"mtime":1610189148529,"results":"65","hashOfConfig":"41"},{"size":343,"mtime":1610173422490,"results":"66","hashOfConfig":"41"},{"size":184,"mtime":1610862057365,"results":"67","hashOfConfig":"41"},{"size":2392,"mtime":1611225402340,"results":"68","hashOfConfig":"41"},{"size":333,"mtime":1610861936921,"results":"69","hashOfConfig":"41"},{"size":202,"mtime":1611210276972,"results":"70","hashOfConfig":"41"},{"size":488,"mtime":1611213774225,"results":"71","hashOfConfig":"41"},{"size":1480,"mtime":1611215855675,"results":"72","hashOfConfig":"41"},{"size":189,"mtime":1611225509589,"results":"73","hashOfConfig":"41"},{"size":1180,"mtime":1611232542235,"results":"74","hashOfConfig":"41"},{"size":588,"mtime":1610184292424,"results":"75","hashOfConfig":"41"},{"size":395,"mtime":1610173258426,"results":"76","hashOfConfig":"41"},{"size":176,"mtime":1611124235281,"results":"77","hashOfConfig":"41"},{"size":2038,"mtime":1610862057345,"results":"78","hashOfConfig":"41"},{"size":2112,"mtime":1611224230997,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1223gbj",{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"89"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"89"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/contexts/list.js",[],["167","168"],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/containers/post/WritePageForm.js",["169","170"],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/post/Write.jsx",[],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/post/MyPost.jsx",[],["171","172"],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/containers/post/MyPageContainer.js",["173","174"],"import React, { useContext } from 'react';\nimport MyPost from '../../components/post/MyPost';\nimport { Auth, List } from '../../contexts/store';\n\nconst MyPageContainer = () => {\n  const { AuthState, AuthDispatch } = useContext(Auth);\n  const { ListState, ListDispatch } = useContext(List);\n  console.log(AuthState);\n  const tokenID = localStorage.getItem('token');\n  const ListCompanyName = ListState.lists.find(\n    list => list.user._id === tokenID\n  );\n\n  console.log(ListCompanyName, 'ddd');\n  return (\n    <MyPost\n      AuthState={AuthState}\n      ListState={ListState}\n      tokenID={tokenID}\n      ListCompanyName={ListCompanyName}\n    />\n  );\n};\n\nexport default MyPageContainer;\n","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/App.js",["175"],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/containers/post/PostListForm.js",["176"],"import React, { useCallback, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { Auth, List, Post } from '../../contexts/store';\nimport PostList from '../../components/post/PostList';\n\nimport { POST_FAIL, POST_LOADING, POST_SUCCESS } from '../../contexts/list';\n\nconst PostListForm = () => {\n  const { AuthState } = useContext(Auth);\n  const { ListState, ListDispatch } = useContext(List);\n\n  const fetchList = useCallback(async () => {\n    await ListDispatch({\n      type: POST_LOADING,\n      loading: true,\n    });\n    try {\n      const response = await axios.get('http://localhost:3000/api/posts');\n      await ListDispatch({\n        type: POST_SUCCESS,\n        data: response.data,\n      });\n    } catch (e) {\n      await ListDispatch({\n        type: POST_FAIL,\n      });\n    }\n  }, [ListDispatch]);\n\n  useEffect(() => {\n    fetchList();\n  }, [fetchList]);\n\n  return <PostList AuthState={AuthState} ListState={ListState} />;\n};\n\nexport default PostListForm;\n","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/post/UserApply.jsx",[],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/containers/post/ModifyForm.js",["177"],"import React, { useCallback, useContext, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { Auth, Post } from '../../contexts/store';\nimport { CHANGE_FIELD, MODIFY_FORM, POST_SUCCESS } from '../../contexts/write';\nimport Write from '../../components/post/Write';\nimport { REGISTER_INFO } from '../../contexts/auth';\n\nconst ModifyForm = ({ history, match }) => {\n  const { AuthState, AuthDispatch } = useContext(Auth);\n  const { PostState, PostDispatch } = useContext(Post);\n  const { postId } = match.params;\n\n  const modify = async () => {\n    try {\n      const response = await axios.patch(\n        `http://localhost:3000/api/post/${postId}`,\n        {\n          title: PostState.posts.title,\n          body: PostState.posts.body,\n          address: PostState.posts.address,\n          periodStart: PostState.posts.periodStart,\n          periodEnd: PostState.posts.periodEnd,\n          timeStart: PostState.posts.timeStart,\n          timeEnd: PostState.posts.timeEnd,\n          gender: PostState.posts.gender,\n          phoneNumber: PostState.posts.phoneNumber,\n          number: PostState.posts.number,\n          companyName: PostState.posts.companyName,\n        }\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onChange = e => {\n    const { value, name } = e.target;\n    PostDispatch({\n      type: CHANGE_FIELD,\n      key: name,\n      value,\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    modify();\n    PostDispatch({\n      type: POST_SUCCESS,\n    });\n    history.push('/');\n  };\n\n  const getPost = useCallback(async () => {\n    const response = await axios.get(\n      `http://localhost:3000/api/post/${postId}`\n    );\n    const {\n      title,\n      body,\n      address,\n      companyName,\n      gender,\n      number,\n      periodStart,\n      periodEnd,\n      timeStart,\n      timeEnd,\n      phoneNumber,\n    } = response.data['0'];\n    await PostDispatch({\n      type: MODIFY_FORM,\n      title,\n      body,\n      companyName,\n      address,\n      gender,\n      number,\n      periodStart,\n      periodEnd,\n      timeStart,\n      timeEnd,\n      phoneNumber,\n    });\n    await AuthDispatch({\n      type: REGISTER_INFO,\n      form: 'company',\n      companyName,\n      phoneNumber,\n      address,\n    });\n  }, [AuthDispatch, PostDispatch, postId]);\n\n  useEffect(() => {\n    getPost();\n    return () => {\n      PostDispatch({\n        type: POST_SUCCESS,\n      });\n    };\n  }, [getPost, PostDispatch]);\n\n  return (\n    <Write\n      PostState={PostState}\n      AuthState={AuthState}\n      onChange={onChange}\n      onSubmit={onSubmit}\n    />\n  );\n};\n\nexport default withRouter(ModifyForm);\n","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/contexts/write.js",[],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/contexts/auth.js",[],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/contexts/store.js",[],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/lib/api/AddressApi.js",["178"],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/pages/DivisionPage.jsx",["179"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport qs from 'query-string';\nimport Button from '../components/common/Button';\n\nconst Division = () => {\n  const url = window.location.href;\n  const parse = url.split('/');\n\n  return (\n    <>\n      <Button as={Link} to={`/${parse[parse.length - 1]}/company`}>\n        기업으로 {parse[parse.length - 1] === 'login' ? '로그인' : '회원가입'}\n    </Button>\n    \n      <Button as={Link} to={`/${parse[parse.length - 1]}/person`}>\n    개인으로 {parse[parse.length - 1] === 'login' ? '로그인' : '회원가입'}\n    </Button>\n    </>\n  );\n};\n\nexport default Division;\n","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/pages/UserApplyPage.jsx",[],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/containers/post/UserApplyForm.js",[],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/auth/AuthTemplate.jsx",[],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/lib/api/MapContainer.js",[],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/auth/Register.jsx",["180","181"],"import React from 'react';\nimport DaumPostcode from 'react-daum-postcode';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport Button from \"../common/Button\";\nimport AskAddressModal from '../post/AskAddressModal';\n\n// 로그인 폼을 보여주는 컴포넌트\n\nconst ErrorMessage = styled.div`\n  color: red;\n  text-align: center;\n  font-size: 0.875rem;\n  margin-top: 1rem;\n`;\n\nconst AuthFormBlock = styled.div`\n  h3 {\n    margin: 0;\n    color: ${palette.gray[8]};\n    margin-bottom: 1rem;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  font-size: 1rem;\n  border: none;\n  border: 1px solid ${palette.gray[5]};\n  padding-bottom: 0.5rem;\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n  outline: none;\n  width: 100%;\n\n  &:focus {\n    color: $oc-teal-7;\n    border-bottom: 1px solid ${palette.gray[7]};\n  }\n\n  & + & {\n    margin-top: 1rem;\n  }\n`;\n\nconst Footer = styled.div`\n  margin-top: 2rem;\n  text-align: right;\n  a {\n    color: ${palette.gray[6]};\n    text-decoration: underline;\n    &:hover {\n      color: ${palette.gray[9]}\n    }\n  }\n`;\n\nconst ButtonWithMarginTop = styled(Button)`\n  margin-top: 1rem;\n`;\n\nconst Register = ({ position, onChange, onSubmit, form, error, onAddress, modal, onCancel, onConfirm }) => {\n  return (\n    <AuthFormBlock>\n      {position === 'company' ?\n        (<h3>기업 회원가입</h3>)\n        : (<h3>개인 회원가입</h3>)}\n      <form onSubmit={onSubmit}>\n        <label style={{fontWeight: 700, paddingBottom: '3px'}} htmlFor=\"username\">아이디</label>\n        <StyledInput\n          autoComplete=\"username\"\n          id=\"username\"\n          name=\"username\"\n          placeholder=\"아이디\"\n          onChange={onChange}\n          value={form.username}\n        />\n\n<label style={{fontWeight: 700}} htmlFor=\"username\">비밀번호</label>\n        <StyledInput\n          autoComplete=\"new-password\"\n          name=\"password\"\n          placeholder=\"비밀번호\"\n          type=\"password\"\n          onChange={onChange}\n          value={form.password}\n        />\n<label style={{fontWeight: 700}} htmlFor=\"username\">비밀번호 확인</label>\n        <StyledInput\n            autoComplete=\"new-password\"\n            name=\"passwordConfirm\"\n            placeholder=\"비밀번호 확인\"\n            type=\"password\"  \n            onChange={onChange}\n            value={form.passwordConfirm}\n        />\n\n<label style={{fontWeight: 700}} htmlFor=\"username\">이메일</label>\n        <StyledInput\n            autoComplete=\"email\"\n            name=\"email\"\n            placeholder=\"이메일 주소\"\n            type=\"text\"  \n            onChange={onChange}\n        />\n\n      {position === 'company' && (\n          <>\n            <label style={{fontWeight: 700}} htmlFor=\"username\">기관명</label>\n          <StyledInput\n            autoComplete=\"company-name\"\n            name=\"companyName\"\n            placeholder=\"기관명\"\n            type=\"text\"  \n            onChange={onChange}\n            value={form.companyName}\n          />\n        </>\n        )}\n\n        <label style={{fontWeight: 700}} htmlFor=\"username\">주소</label>\n          <StyledInput\n            autoComplete=\"address\"\n            name=\"address\"\n            placeholder=\"주소\"\n            type=\"address\"  \n            onChange={onChange}\n            value={form.address}\n        />\n\n        {/* <Button onClick={onAddress}>주소 찾기</Button>\n        <AskAddressModal \n            visible={modal}\n            onConfirm={onConfirm}\n            onCancel={onCancel} \n          /> */}\n        \n        <label style={{fontWeight: 700}} htmlFor=\"username\">전화번호</label>\n        <StyledInput\n            autoComplete=\"phone-number\"\n            name=\"phoneNumber\"\n            placeholder=\"전화번호\"\n            type=\"tel\"  \n            onChange={onChange}\n            value={form.phoneNumber}\n        />\n        {error === 409 && <ErrorMessage>이미 존재하는 아이디입니다.</ErrorMessage>}\n        {error === 400 && <ErrorMessage>회원 가입 양식을 지켜주세요.</ErrorMessage>}\n        <ButtonWithMarginTop green fullWidth>회원가입</ButtonWithMarginTop>\n      </form>\n      <Footer>\n          <Link to=\"/login\">로그인</Link>\n      </Footer>\n    </AuthFormBlock>\n  );\n};\n\nexport default Register;\n\n","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/common/AskModal.js",["182"],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/post/PostList.jsx",["183","184"],"import React from 'react';\nimport Header from '../../components/common/Header';\nimport Button from '../../components/common/Button';\nimport StyledContainer from '../common/Container';\nimport styled from 'styled-components'\nimport { Link, withRouter } from 'react-router-dom';\n\nconst PostListBlock = styled.div`\n  h1{\n    text-align:center;\n    font-size:2rem;\n\n  }\n  button{\n    margin-right:30px\n  }\n  ul{\n    margin-top:100px;\n  }\n  li{\n    border-bottom:1px solid black;\n    padding:10px 0;\n    text-align:center\n  }\n  span{\n    display:inline-block;\n    padding:0 5px\n  }\n  li span:nth-child(1){\n    width:20%;\n  }\n  \n  li span:nth-child(2){\n    width:40%;\n    text-overflow:ellipsis;\n    white-space:nowrap;\n    word-wrap:normal;\n    overflow:hidden;\n    text-align:left;\n  }\n  li span:nth-child(3){\n    width:10%;\n  }\n  li span:nth-child(4){\n    width:20%;\n  }\n  li span:nth-child(5){\n    width:10%;\n  }\n  li span.recruitTitle{\n    text-align:center\n  }\n  `;\nfunction PostList({ AuthState, ListState }) {\n  const { company, person } = AuthState;\n  console.log(AuthState);\n  return (\n    <div>\n      <Header AuthState={AuthState} />\n      <StyledContainer>\n        <PostListBlock>\n          <h1>봉사자 모집 공고</h1>\n          {AuthState.login.position === 'company' && <Button as={Link} to=\"/write\">글쓰기</Button>}\n          {AuthState.login.position === 'company' && <Button as={Link} to=\"/mypage\">내가쓴글</Button>}\n          <ul>\n            <li>\n              <span className=\"recruitTitle\">회사이름</span>\n              <span className=\"recruitTitle\">제목</span>\n              <span className=\"recruitNumber\">인원수</span>\n              <span className=\"recruitPeriod\">기간</span>\n              <span className=\"recruitGender\">성별</span>\n            </li>\n            {ListState.lists.map(list => (\n              <li key={list._id}>\n                <Link to={`/${list._id}`}>\n                  <span>{list.companyName}</span>\n                  <span>{list.title}</span>\n                  <span>{list.number}</span>\n                  <span>{list.periodStart}~{list.periodEnd}</span>\n                  <span>{list.gender}</span>\n                </Link>\n              </li>\n            )\n            )}\n          </ul>\n        </PostListBlock>\n      </StyledContainer>\n    </div>\n  )\n}\n\nexport default withRouter(PostList);","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/containers/auth/RegisterForm.js",["185"],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/index.js",[],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/common/Container.js",[],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/pages/LoginPage.jsx",[],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/pages/RegisterPage.jsx",[],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/pages/MyPage.jsx",[],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/common/Header.js",["186","187","188","189","190"],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/common/Responsive.js",[],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/pages/WritePage.jsx",[],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/post/AskAddressModal.jsx",["191","192"],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/common/AddressModal.js",["193","194","195"],"import React from 'react';\nimport DaumPostcode from 'react-daum-postcode';\nimport styled from 'styled-components';\nimport FindAddr from '../../lib/api/AddressApi';\nimport Button from './Button';\n\nconst Fullscreen = styled.div`\n  position: fixed;\n  z-index: 30;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.25);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst AskModalBlock = styled.div`\n  width: 320px;\n  background: white;\n  padding: 1.5rem;\n  border-radius: 4px;\n  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.125);\n\n  h2 {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n  p {\n    margin-bottom: 3rem;\n  }\n  .buttons {\n    display: flex;\n    justify-content: flex-end;\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  height: 2rem;\n\n  & + & {\n    margin-left: 0.75rem;\n  }\n`;\n\nconst AddressModal = ({\n  visible,\n  title,\n  confirmText = '확인',\n  cancelText = '취소',\n  onConfirm,\n  onCancel,\n}) => {\n  const onClick = e => {\n    console.log(e.target);\n  };\n  if (!visible) return null;\n  return (\n    <Fullscreen>\n      {/* <AskModalBlock>\n        <h2>{title}</h2> */}\n      <FindAddr onClick={onClick} />\n      {/* <div className=\"buttons\">\n          <StyledButton onClick={onCancel}>{cancelText}</StyledButton>\n          <StyledButton cyan onClick={onConfirm}>\n            {confirmText}\n          </StyledButton>\n        </div>\n      </AskModalBlock> */}\n    </Fullscreen>\n  );\n};\n\nexport default AddressModal;\n","/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/pages/PostListPage.jsx",[],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/lib/api/email.js",[],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/lib/styles/palette.js",[],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/lib/api/auth.js",[],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/pages/ModifyPage.jsx",[],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/components/auth/Login.jsx",[],"/Users/kimjaemin/Documents/dev/HoC/HoC-frontend/src/containers/auth/LoginForm.js",[],{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":10,"column":10,"nodeType":"202","messageId":"203","endLine":10,"endColumn":21},{"ruleId":"204","severity":1,"message":"205","line":97,"column":6,"nodeType":"206","endLine":97,"endColumn":20,"suggestions":"207"},{"ruleId":"196","replacedBy":"208"},{"ruleId":"198","replacedBy":"209"},{"ruleId":"200","severity":1,"message":"210","line":6,"column":22,"nodeType":"202","messageId":"203","endLine":6,"endColumn":34},{"ruleId":"200","severity":1,"message":"211","line":7,"column":22,"nodeType":"202","messageId":"203","endLine":7,"endColumn":34},{"ruleId":"200","severity":1,"message":"212","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":17},{"ruleId":"200","severity":1,"message":"213","line":3,"column":22,"nodeType":"202","messageId":"203","endLine":3,"endColumn":26},{"ruleId":"200","severity":1,"message":"214","line":16,"column":13,"nodeType":"202","messageId":"203","endLine":16,"endColumn":21},{"ruleId":"200","severity":1,"message":"215","line":3,"column":9,"nodeType":"202","messageId":"203","endLine":3,"endColumn":16},{"ruleId":"200","severity":1,"message":"216","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":10},{"ruleId":"200","severity":1,"message":"217","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":20},{"ruleId":"200","severity":1,"message":"218","line":7,"column":8,"nodeType":"202","messageId":"203","endLine":7,"endColumn":23},{"ruleId":"200","severity":1,"message":"217","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":20},{"ruleId":"200","severity":1,"message":"219","line":55,"column":11,"nodeType":"202","messageId":"203","endLine":55,"endColumn":18},{"ruleId":"200","severity":1,"message":"220","line":55,"column":20,"nodeType":"202","messageId":"203","endLine":55,"endColumn":26},{"ruleId":"204","severity":1,"message":"221","line":116,"column":6,"nodeType":"206","endLine":116,"endColumn":8,"suggestions":"222"},{"ruleId":"200","severity":1,"message":"223","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":14},{"ruleId":"200","severity":1,"message":"224","line":3,"column":16,"nodeType":"202","messageId":"203","endLine":3,"endColumn":26},{"ruleId":"200","severity":1,"message":"225","line":5,"column":10,"nodeType":"202","messageId":"203","endLine":5,"endColumn":22},{"ruleId":"200","severity":1,"message":"226","line":7,"column":10,"nodeType":"202","messageId":"203","endLine":7,"endColumn":15},{"ruleId":"200","severity":1,"message":"227","line":9,"column":8,"nodeType":"202","messageId":"203","endLine":9,"endColumn":23},{"ruleId":"200","severity":1,"message":"228","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":25},{"ruleId":"200","severity":1,"message":"229","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":16},{"ruleId":"200","severity":1,"message":"217","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":20},{"ruleId":"200","severity":1,"message":"230","line":20,"column":7,"nodeType":"202","messageId":"203","endLine":20,"endColumn":20},{"ruleId":"200","severity":1,"message":"231","line":40,"column":7,"nodeType":"202","messageId":"203","endLine":40,"endColumn":19},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"no-unused-vars","'CHECK_LOGIN' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'PostDispatch' and 'PostState'. Either include them or remove the dependency array.","ArrayExpression",["234"],["232"],["233"],"'AuthDispatch' is assigned a value but never used.","'ListDispatch' is assigned a value but never used.","'Container' is defined but never used.","'Post' is defined but never used.","'response' is assigned a value but never used.","'onClick' is assigned a value but never used.","'qs' is defined but never used.","'DaumPostcode' is defined but never used.","'AskAddressModal' is defined but never used.","'company' is assigned a value but never used.","'person' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'AuthDispatch' and 'parse'. Either include them or remove the dependency array.",["235"],"'Link' is defined but never used.","'withRouter' is defined but never used.","'CHANGE_FIELD' is defined but never used.","'login' is defined but never used.","'StyledContainer' is defined but never used.","'useState' is defined but never used.","'AskModal' is defined but never used.","'AskModalBlock' is assigned a value but never used.","'StyledButton' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},"Update the dependencies array to be: [AuthDispatch, PostDispatch, PostState]",{"range":"240","text":"241"},"Update the dependencies array to be: [AuthDispatch, parse]",{"range":"242","text":"243"},[2327,2341],"[AuthDispatch, PostDispatch, PostState]",[3152,3154],"[AuthDispatch, parse]"]
