[{"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\index.js":"1","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\App.js":"2","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\contexts\\store.js":"4","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\contexts\\write.js":"5","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\contexts\\auth.js":"6","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\contexts\\list.js":"7","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\common\\Container.js":"8","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\lib\\api\\AddressApi.js":"9","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\pages\\PostListPage.jsx":"10","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\pages\\LoginPage.jsx":"11","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\pages\\WritePage.jsx":"12","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\pages\\RegisterPage.jsx":"13","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\pages\\ModifyPage.jsx":"14","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\pages\\Apply.jsx":"15","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\pages\\DivisionPage.jsx":"16","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\pages\\UserApplyPage.jsx":"17","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\pages\\MyPage.jsx":"18","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\lib\\api\\email.js":"19","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\common\\Button.js":"20","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\containers\\post\\PostListForm.js":"21","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\containers\\post\\WritePageForm.js":"22","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\containers\\post\\ModifyForm.js":"23","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\containers\\post\\UserApplyForm.js":"24","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\containers\\post\\MyPageContainer.js":"25","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\containers\\auth\\LoginForm.js":"26","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\containers\\auth\\RegisterForm.js":"27","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\auth\\AuthTemplate.jsx":"28","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\lib\\styles\\palette.js":"29","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\post\\MyPost.jsx":"30","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\auth\\Register.jsx":"31","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\auth\\Login.jsx":"32","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\post\\Write.jsx":"33","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\post\\UserApply.jsx":"34","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\post\\PostList.jsx":"35","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\lib\\api\\MapContainer.js":"36","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\common\\Header.js":"37","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\common\\Modal.js":"38","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\common\\Mainbanner.js":"39","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\post\\AskAddressModal.jsx":"40","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\post\\AskRemoveModal.jsx":"41","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\common\\Responsive.js":"42","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\lib\\api\\auth.js":"43","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\common\\AddressModal.js":"44","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\common\\AskModal.js":"45"},{"size":613,"mtime":1610625040702,"results":"46","hashOfConfig":"47"},{"size":2520,"mtime":1611241498243,"results":"48","hashOfConfig":"47"},{"size":375,"mtime":1610625040751,"results":"49","hashOfConfig":"47"},{"size":199,"mtime":1611114365467,"results":"50","hashOfConfig":"47"},{"size":1747,"mtime":1611241498438,"results":"51","hashOfConfig":"47"},{"size":3125,"mtime":1611241498406,"results":"52","hashOfConfig":"47"},{"size":962,"mtime":1611241498429,"results":"53","hashOfConfig":"47"},{"size":671,"mtime":1611239902458,"results":"54","hashOfConfig":"47"},{"size":1055,"mtime":1611241498452,"results":"55","hashOfConfig":"47"},{"size":199,"mtime":1611241498584,"results":"56","hashOfConfig":"47"},{"size":286,"mtime":1610625040735,"results":"57","hashOfConfig":"47"},{"size":215,"mtime":1611241498590,"results":"58","hashOfConfig":"47"},{"size":357,"mtime":1610625040745,"results":"59","hashOfConfig":"47"},{"size":185,"mtime":1611241498581,"results":"60","hashOfConfig":"47"},{"size":185,"mtime":1611241498578,"results":"61","hashOfConfig":"47"},{"size":4530,"mtime":1611285674587,"results":"62","hashOfConfig":"47"},{"size":192,"mtime":1611037629767,"results":"63","hashOfConfig":"47"},{"size":194,"mtime":1610950473359,"results":"64","hashOfConfig":"47"},{"size":1246,"mtime":1611241498459,"results":"65","hashOfConfig":"47"},{"size":1175,"mtime":1610625040663,"results":"66","hashOfConfig":"47"},{"size":1074,"mtime":1611241498384,"results":"67","hashOfConfig":"47"},{"size":2676,"mtime":1611241498398,"results":"68","hashOfConfig":"47"},{"size":2838,"mtime":1611241498372,"results":"69","hashOfConfig":"47"},{"size":1663,"mtime":1611241498390,"results":"70","hashOfConfig":"47"},{"size":2803,"mtime":1611241498378,"results":"71","hashOfConfig":"47"},{"size":2198,"mtime":1611241498364,"results":"72","hashOfConfig":"47"},{"size":3756,"mtime":1611241498368,"results":"73","hashOfConfig":"47"},{"size":1089,"mtime":1611233525221,"results":"74","hashOfConfig":"47"},{"size":629,"mtime":1610625040724,"results":"75","hashOfConfig":"47"},{"size":3155,"mtime":1611242215738,"results":"76","hashOfConfig":"47"},{"size":4486,"mtime":1611241498252,"results":"77","hashOfConfig":"47"},{"size":2127,"mtime":1611233527538,"results":"78","hashOfConfig":"47"},{"size":8987,"mtime":1611241498351,"results":"79","hashOfConfig":"47"},{"size":5658,"mtime":1611241498346,"results":"80","hashOfConfig":"47"},{"size":3527,"mtime":1611244581843,"results":"81","hashOfConfig":"47"},{"size":1562,"mtime":1611241498456,"results":"82","hashOfConfig":"47"},{"size":3559,"mtime":1611285796789,"results":"83","hashOfConfig":"47"},{"size":2692,"mtime":1611241498269,"results":"84","hashOfConfig":"47"},{"size":2577,"mtime":1611233127307,"results":"85","hashOfConfig":"47"},{"size":507,"mtime":1611241498316,"results":"86","hashOfConfig":"47"},{"size":458,"mtime":1611241498324,"results":"87","hashOfConfig":"47"},{"size":348,"mtime":1610625040671,"results":"88","hashOfConfig":"47"},{"size":408,"mtime":1610625040713,"results":"89","hashOfConfig":"47"},{"size":1556,"mtime":1611241498256,"results":"90","hashOfConfig":"47"},{"size":1434,"mtime":1611241498260,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"fhmv06",{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"94"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"94"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"94"},"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\index.js",[],["196","197"],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\App.js",["198"],"import './App.css';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Container from './components/common/Container';\r\nimport PostListPage from './pages/PostListPage';\r\nimport LoginPage from './pages/LoginPage';\r\nimport DivisionPage from './pages/DivisionPage';\r\nimport RegisterPage from './pages/RegisterPage';\r\nimport WritePage from './pages/WritePage';\r\nimport UserApplyPage from './pages/UserApplyPage';\r\nimport { Auth, Post, List } from './contexts/store';\r\nimport { useReducer } from 'react';\r\nimport { AuthReducer, AuthInitial } from './contexts/auth';\r\nimport FindAddr from './lib/api/AddressApi';\r\nimport MyPage from './pages/MyPage';\r\nimport { PostInitial, PostReducer } from './contexts/write';\r\nimport { ListInitial, ListReducer } from './contexts/list';\r\nimport ModifyPage from './pages/ModifyPage';\r\nimport Apply from './pages/Apply';\r\nfunction App() {\r\n  const [AuthState, AuthDispatch] = useReducer(AuthReducer, AuthInitial);\r\n  const [PostState, PostDispatch] = useReducer(PostReducer, PostInitial);\r\n  // const [LoadingState, LoadingDispatch] = useReducer(\r\n  //   LoadingReducer,\r\n  //   LoadingInitial\r\n  // );\r\n  const [ListState, ListDispatch] = useReducer(ListReducer, ListInitial);\r\n\r\n  return (\r\n    <>\r\n      <Post.Provider value={{ PostState, PostDispatch }}>\r\n        <Auth.Provider value={{ AuthState, AuthDispatch }}>\r\n          <List.Provider value={{ ListState, ListDispatch }}>\r\n            <Switch>\r\n              <Route path=\"/login/company\" component={LoginPage} />\r\n              <Route path=\"/login/person\" component={LoginPage} />\r\n              <Route path=\"/login\" component={DivisionPage} />\r\n              <Route path=\"/register/person\" component={RegisterPage} />\r\n              <Route path=\"/register/company\" component={RegisterPage} />\r\n              <Route path=\"/register\" exact component={DivisionPage} />\r\n              <Route path=\"/write\" component={WritePage} />\r\n              <Route path=\"/modify/:postId\" component={ModifyPage}/>\r\n              <Route path=\"/mypage\" component={MyPage} />\r\n              <Route path=\"/apply\" component={Apply} />\r\n              <Route path=\"/modify/:postId\" component={ModifyPage} />\r\n              <Route path=\"/:postId\" component={UserApplyPage} />\r\n              <Route path=\"/address\" component={FindAddr} />\r\n              <Route path=\"/\" component={PostListPage} exact />\r\n            </Switch>\r\n          </List.Provider>\r\n        </Auth.Provider>\r\n      </Post.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\contexts\\store.js",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\contexts\\write.js",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\contexts\\auth.js",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\contexts\\list.js",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\common\\Container.js",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\lib\\api\\AddressApi.js",["199","200"],"import DaumPostcode from 'react-daum-postcode';\r\nconst FindAddr = () => {\r\n  const onClick = e => {\r\n    console.log(e.target);\r\n  };\r\n  const postCodeStyle = {\r\n    display: 'block',\r\n    position: 'absolute',\r\n    width: 500,\r\n    heigth: 500,\r\n    top: '50px',\r\n    zIndex: '100',\r\n    padding: '7px',\r\n  };\r\n  const handleComplete = data => {\r\n    console.log(data);\r\n    let fullAddress = data.address;\r\n    let extraAddress = '';\r\n\r\n    if (data.addressType === 'R') {\r\n      if (data.bname !== '') {\r\n        extraAddress += data.bname;\r\n      }\r\n      if (data.buildingName !== '') {\r\n        extraAddress +=\r\n          extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName;\r\n      }\r\n      fullAddress += extraAddress !== '' ? ` (${extraAddress})` : '';\r\n    }\r\n\r\n    // console.log(fullAddress); // e.g. '서울 성동구 왕십리로2길 20 (성수동1가)'\r\n  };\r\n\r\n  return (\r\n    <DaumPostcode\r\n      onComplete={handleComplete}\r\n      style={postCodeStyle}\r\n      // height={700}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FindAddr;\r\n","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\pages\\PostListPage.jsx",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\pages\\LoginPage.jsx",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\pages\\WritePage.jsx",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\pages\\RegisterPage.jsx",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\pages\\ModifyPage.jsx",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\pages\\Apply.jsx",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\pages\\DivisionPage.jsx",["201","202","203"],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\pages\\UserApplyPage.jsx",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\pages\\MyPage.jsx",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\lib\\api\\email.js",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\common\\Button.js",["204"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled, { css } from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\n\r\nconst buttonStyle = css`\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  padding: 0.25rem 1rem;\r\n  color: white;\r\n  outline: none;\r\n  cursor: pointer;\r\n\r\n  background: ${palette.green[4]};\r\n  &:hover {\r\n    background: ${palette.green[6]};\r\n  }\r\n\r\n  ${props =>\r\n    props.fullWidth &&\r\n    css`\r\n      padding-top: 0.75rem;\r\n      padding-bottom: 0.75rem;\r\n      width: 100%;\r\n      font-size: 1.125rem;\r\n    `}\r\n\r\n  ${props =>\r\n    props.cyan &&\r\n    css`\r\n      background: ${palette.cyan[5]};\r\n      &:hover {\r\n        background: ${palette.cyan[4]};\r\n      }\r\n    `}\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  ${buttonStyle}\r\n`;\r\n\r\n// 자동 import 되려고 굳이 Button 컴포넌트를 만들어서 내보냄\r\nconst Button = props => {\r\n  return props.to ? (\r\n    <StyledButton {...props} green={props.green ? 1 : 0} />\r\n  ) : (\r\n    <StyledButton {...props} />\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\containers\\post\\PostListForm.js",["205"],"import React, { useCallback, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Auth, List, Post } from '../../contexts/store';\r\nimport PostList from '../../components/post/PostList';\r\n\r\nimport { POST_FAIL, POST_LOADING, POST_SUCCESS } from '../../contexts/list';\r\n\r\nconst PostListForm = () => {\r\n  \r\n  const { AuthState } = useContext(Auth);\r\n  const { ListState, ListDispatch } = useContext(List);\r\n\r\n  const fetchList = useCallback(async () => {\r\n    await ListDispatch({\r\n      type: POST_LOADING,\r\n      loading: true,\r\n    });\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/api/posts');\r\n      console.log(response);\r\n      await ListDispatch({\r\n        type: POST_SUCCESS,\r\n        data: response.data,\r\n      });\r\n    } catch (error) {\r\n      await ListDispatch({\r\n        type: POST_FAIL,\r\n        error\r\n      });\r\n    }\r\n  }, [ListDispatch]);\r\n\r\n  useEffect(() => {\r\n    fetchList();\r\n  }, [fetchList]);\r\n\r\n  return <PostList AuthState={AuthState} ListState={ListState} />;\r\n};\r\n\r\nexport default PostListForm;\r\n","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\containers\\post\\WritePageForm.js",["206","207","208"],"import React, { useContext, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom'; \r\nimport axios from 'axios';\r\nimport {\r\n  AUTHSTATE_INPUT_VALUE,\r\n  CHANGE_FIELD,\r\n  POST_SUCCESS,\r\n} from '../../contexts/write';\r\nimport { Auth, Post } from '../../contexts/store';\r\nimport Write from '../../components/post/Write';\r\nimport { CHECK_LOGIN, FILL_WRITE_INPUT, INITAILIZE_FORM } from '../../contexts/auth';\r\n\r\nconst WritePageForm = ({ history }) => {\r\n  const { AuthState, AuthDispatch } = useContext(Auth);\r\n  const { PostState, PostDispatch } = useContext(Post);\r\n\r\n  const post = async () => {\r\n    console.log(PostState);\r\n    const {\r\n      title,\r\n      body,\r\n      address,\r\n      periodStart,\r\n      periodEnd,\r\n      timeStart,\r\n      timeEnd,\r\n      gender,\r\n      phoneNumber,\r\n      number,\r\n      companyName,\r\n      email,\r\n    } = PostState.posts;\r\n    try {\r\n      await axios.post('http://localhost:3000/api/posts', {\r\n        title,\r\n        body,\r\n        address,\r\n        periodStart,\r\n        periodEnd,\r\n        timeStart,\r\n        timeEnd,\r\n        gender,\r\n        phoneNumber,\r\n        number,\r\n        companyName,\r\n        email,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n\r\n  const onChange = e => {\r\n    const { value, name } = e.target;\r\n    PostDispatch({\r\n      type: CHANGE_FIELD,\r\n      key: name,\r\n      value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    post();\r\n    history.push('/');\r\n    \r\n  \r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(PostState);\r\n    (async () => {\r\n      const response = await axios.get('/api/auth/check/company');\r\n      console.log('RESPONSE', response);\r\n      await AuthDispatch({\r\n        type: FILL_WRITE_INPUT,\r\n        form: 'company',\r\n        id: response.data._id,\r\n        username: response.data.username,\r\n        companyName: response.data.companyName,\r\n        address: response.data.address,\r\n        phoneNumber: response.data.phoneNumber,\r\n        email: response.data.email,\r\n      });\r\n      await PostDispatch({\r\n        type: AUTHSTATE_INPUT_VALUE,\r\n        address: response.data.address,\r\n        phoneNumber: response.data.phoneNumber,\r\n        companyName: response.data.companyName,\r\n        email: response.data.email,\r\n      });\r\n      await console.log(PostState);\r\n    })();\r\n\r\n    return () => {\r\n      PostDispatch({\r\n        type: POST_SUCCESS,\r\n      });\r\n    };\r\n  }, [AuthDispatch]);\r\n  \r\n\r\n  return (\r\n    <Write\r\n      AuthState={AuthState}\r\n      PostState={PostState}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n    />\r\n  );\r\n};\r\nexport default withRouter(WritePageForm);\r\n","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\containers\\post\\ModifyForm.js",["209"],"import React, { useCallback, useContext, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Auth, Post } from '../../contexts/store';\r\nimport { CHANGE_FIELD, MODIFY_FORM, POST_SUCCESS } from '../../contexts/write';\r\nimport Write from '../../components/post/Write';\r\nimport { REGISTER_INFO } from '../../contexts/auth';\r\n\r\nconst ModifyForm = ({ history, match }) => {\r\n  const { AuthState, AuthDispatch } = useContext(Auth);\r\n  const { PostState, PostDispatch } = useContext(Post);\r\n  const { postId } = match.params;\r\n\r\n  const modify = async () => {\r\n    try {\r\n      const response = await axios.patch(\r\n        `http://localhost:3000/api/post/${postId}`,\r\n        {\r\n          title: PostState.posts.title,\r\n          body: PostState.posts.body,\r\n          address: PostState.posts.address,\r\n          periodStart: PostState.posts.periodStart,\r\n          periodEnd: PostState.posts.periodEnd,\r\n          timeStart: PostState.posts.timeStart,\r\n          timeEnd: PostState.posts.timeEnd,\r\n          gender: PostState.posts.gender,\r\n          phoneNumber: PostState.posts.phoneNumber,\r\n          number: PostState.posts.number,\r\n          companyName: PostState.posts.companyName,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onChange = e => {\r\n    const { value, name } = e.target;\r\n    PostDispatch({\r\n      type: CHANGE_FIELD,\r\n      key: name,\r\n      value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    modify();\r\n    PostDispatch({\r\n      type: POST_SUCCESS,\r\n    });\r\n    console.log(PostState);\r\n    history.push('/');\r\n  };\r\n\r\n  const getPost = useCallback(async () => {\r\n    const response = await axios.get(\r\n      `http://localhost:3000/api/post/${postId}`\r\n    );\r\n    const {\r\n      title,\r\n      body,\r\n      address,\r\n      companyName,\r\n      gender,\r\n      number,\r\n      periodStart,\r\n      periodEnd,\r\n      timeStart,\r\n      timeEnd,\r\n      phoneNumber,\r\n    } = response.data['0'];\r\n    await PostDispatch({\r\n      type: MODIFY_FORM,\r\n      title,\r\n      body,\r\n      companyName,\r\n      address,\r\n      gender,\r\n      number,\r\n      periodStart,\r\n      periodEnd,\r\n      timeStart,\r\n      timeEnd,\r\n      phoneNumber,\r\n    });\r\n    await AuthDispatch({\r\n      type: REGISTER_INFO,\r\n      form: 'company',\r\n      companyName,\r\n      phoneNumber,\r\n      address,\r\n    });\r\n  }, [AuthDispatch, PostDispatch, postId]);\r\n\r\n  useEffect(() => {\r\n    getPost();\r\n    return () => {\r\n      PostDispatch({\r\n        type: POST_SUCCESS,\r\n      });\r\n    };\r\n  }, [getPost, PostDispatch]);\r\n\r\n  return (\r\n    <Write\r\n      PostState={PostState}\r\n      AuthState={AuthState}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(ModifyForm);\r\n","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\containers\\post\\UserApplyForm.js",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\containers\\post\\MyPageContainer.js",["210","211"],"import axios from 'axios';\r\nimport React, { useContext, useRef, useState} from 'react';\r\nimport MyPost from '../../components/post/MyPost';\r\nimport { POST_SUCCESS } from '../../contexts/list';\r\nimport { Auth, List } from '../../contexts/store';\r\nconst arr = [];\r\n\r\nconst MyPageContainer = ({match, history}) => {\r\n  const [modal, setModal] = useState(false);\r\n  const onRemoveClick = (e) => {\r\n    // console.log(e.target.previousElementSibling,999);\r\n    // 모달창 열기\r\n    setModal(true);\r\n  }\r\n  const onCancel = () => {\r\n    // 모달창 닫기\r\n    setModal(false);\r\n  }\r\n  const onConfirm = () => {\r\n    // 삭제+ 모달창 닫기\r\n    setModal(false);\r\n    AllRemove();\r\n  }\r\n\r\n  const { AuthState, AuthDispatch } = useContext(Auth);\r\n  const { ListState, ListDispatch } = useContext(List);\r\n  console.log(ListState,'이겅');\r\n  const tokenID = localStorage.getItem('token');\r\n  console.log(ListState,'요겅');\r\n  const ListName = ListState.lists.filter(list=>list.user._id === tokenID)\r\n  // const ListCompanyName = ListState.lists.find(list=>list.user._id === tokenID)\r\n  // console.log(ListName,33);\r\n  // const Lists_ID = ListState.lists.map(list=>list._id)\r\n  // console.log(Lists_ID,9);\r\n  \r\n  const onChecking = e => {\r\n    // console.log(e.target.checked,1); \r\n    // 빈배열에 1이 true라면 빈배열에 2를 담고 계속 push. 전체삭제눌렀을때, 그 배열을 순회하면서 delet요청 보내기.\r\n    // console.log(e.target.parentNode.id,2);\r\n    if(e.target.checked === true) {\r\n      arr.push(e.target.parentNode.id);\r\n    }else{\r\n      arr.splice(arr.splice(arr.indexOf(e.target.parentNode)))\r\n    }\r\n    console.log(arr,11); \r\n  }\r\n\r\n  const AllRemove = async(e) => {\r\n    try{\r\n      // await axios.delete('http://localhost:3000/api/posts',{\r\n      //   data : arr.map(async ar=>await axios.delete(`http://localhost:3000/api/post/${ar}`))\r\n      // })\r\n      arr.map(async ar=>await axios.delete(`http://localhost:3000/api/post/${ar}`))\r\n\r\n      const response = await axios.get('http://localhost:3000/api/posts');\r\n      await ListDispatch({\r\n        type: POST_SUCCESS,\r\n        data: response.data\r\n      })\r\n      // const response = arr.map(async ar=>await axios.delete(`http://localhost:3000/api/post/${ar}`))\r\n      // await ListDispatch({\r\n      //   type: POST_SUCCESS,\r\n      //   data: response.data\r\n      // })\r\n\r\n      await history.push('/mypage');\r\n      console.log(arr,33);\r\n    } catch(e){\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  return <MyPost \r\n    AuthState={AuthState} \r\n    ListState={ListState} \r\n    modal={modal}\r\n    tokenID={tokenID}\r\n    ListName={ListName}\r\n    onRemoveClick={onRemoveClick} \r\n    onConfirm={onConfirm} \r\n    onCancel={onCancel}\r\n    onChecking={onChecking}\r\n    />;\r\n};\r\n\r\nexport default MyPageContainer;\r\n","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\containers\\auth\\LoginForm.js",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\containers\\auth\\RegisterForm.js",["212"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  CHANGE_FIELD,\r\n  INITAILIZE_FORM,\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n} from '../../contexts/auth';\r\nimport { Auth } from '../../contexts/store';\r\nimport Register from '../../components/auth/Register';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst RegisterForm = ({ history }) => {\r\n  const url = window.location.pathname;\r\n  const parse = url.split('/');\r\n  const { AuthState, AuthDispatch } = useContext(Auth); //app.js에서 프로바이더로 내려준걸 디스트럭처링할당한거다.\r\n  const [error, setError] = useState(null);\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const onAddress = () => {\r\n    // 모달창 열기\r\n    setModal(true);\r\n  };\r\n  const onCancel = () => {\r\n    // 모달창 닫기\r\n    setModal(false);\r\n  };\r\n  const onConfirm = () => {\r\n    // 삭제하기 + 모달창 닫기\r\n    setModal(false);\r\n  };\r\n\r\n  // 비동기\r\n  const companyRegister = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        'http://localhost:3000/api/auth/register/company',\r\n        {\r\n          username: AuthState.company.username,\r\n          password: AuthState.company.password,\r\n          passwordConfirm: AuthState.company.passwordConfirm,\r\n          position: 'company',\r\n          companyName: AuthState.company.companyName,\r\n          address: AuthState.company.address,\r\n          phoneNumber: AuthState.company.phoneNumber,\r\n          email: AuthState.company.email,\r\n        }\r\n      );\r\n      await AuthDispatch({\r\n        type: REGISTER_SUCCESS,\r\n        auth: response,\r\n      });\r\n      await history.push('/login/company');\r\n    } catch (error) {\r\n      console.log(error);\r\n      await AuthDispatch({\r\n        type: REGISTER_FAIL,\r\n        error: error.response,\r\n      });\r\n      await setError(error.response.status);\r\n    }\r\n  };\r\n\r\n  const personRegister = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        'http://localhost:3000/api/auth/register/person',\r\n        {\r\n          username: AuthState.person.username,\r\n          password: AuthState.person.password,\r\n          passwordConfirm: AuthState.person.passwordConfirm,\r\n          position: 'person',\r\n          address: AuthState.person.address,\r\n          phoneNumber: AuthState.person.phoneNumber,\r\n          email: AuthState.person.email,\r\n        }\r\n      );\r\n      console.log(response);\r\n      await AuthDispatch({\r\n        // 디스패치날리면 리듀서로 날라감.\r\n        type: REGISTER_SUCCESS,\r\n        auth: response,\r\n      });\r\n\r\n      await history.push('/login/person');\r\n    } catch (error) {\r\n      console.log(error);\r\n      await AuthDispatch({\r\n        type: REGISTER_FAIL,\r\n        error: error.response,\r\n      });\r\n      await setError(error.response.status);\r\n    }\r\n  };\r\n\r\n  const onChange = e => {\r\n    const { value, name } = e.target;\r\n    AuthDispatch({\r\n      type: CHANGE_FIELD,\r\n      form: parse[parse.length - 1],\r\n      key: name,\r\n      value,\r\n    });\r\n  };\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    if (parse[parse.length - 1] === 'company') companyRegister();\r\n    if (parse[parse.length - 1] === 'person') personRegister();\r\n  };\r\n\r\n  useEffect(() => {\r\n    AuthDispatch({\r\n      type: INITAILIZE_FORM,\r\n      form: parse[parse.length - 1],\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Register\r\n      position={parse[parse.length - 1]}\r\n      form={parse[parse.length - 1]}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      error={error}\r\n      modal={modal}\r\n      onCancel={onCancel}\r\n      onConfirm={onConfirm}\r\n      onAddress={onAddress}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(RegisterForm);\r\n","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\auth\\AuthTemplate.jsx",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\lib\\styles\\palette.js",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\post\\MyPost.jsx",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\auth\\Register.jsx",["213","214"],"import React from 'react';\r\nimport DaumPostcode from 'react-daum-postcode';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport Button from \"../common/Button\";\r\nimport AskAddressModal from '../post/AskAddressModal';\r\n\r\n// 로그인 폼을 보여주는 컴포넌트\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n  text-align: center;\r\n  font-size: 0.875rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst AuthFormBlock = styled.div`\r\n  h3 {\r\n    margin: 0;\r\n    color: ${palette.gray[8]};\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n  font-size: 1rem;\r\n  border: none;\r\n  border: 1px solid ${palette.gray[5]};\r\n  padding-bottom: 0.5rem;\r\n  margin-top: 0.5rem;\r\n  margin-bottom: 0.5rem;\r\n  outline: none;\r\n  width: 100%;\r\n\r\n  &:focus {\r\n    color: $oc-teal-7;\r\n    border-bottom: 1px solid ${palette.gray[7]};\r\n  }\r\n\r\n  & + & {\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\nconst Footer = styled.div`\r\n  margin-top: 2rem;\r\n  text-align: right;\r\n  a {\r\n    color: ${palette.gray[6]};\r\n    text-decoration: underline;\r\n    &:hover {\r\n      color: ${palette.gray[9]}\r\n    }\r\n  }\r\n`;\r\n\r\nconst ButtonWithMarginTop = styled(Button)`\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst Register = ({ position, onChange, onSubmit, form, error, onAddress, modal, onCancel, onConfirm }) => {\r\n  return (\r\n    <AuthFormBlock>\r\n      {position === 'company' ?\r\n        (<h3>기업 회원가입</h3>)\r\n        : (<h3>개인 회원가입</h3>)}\r\n      <form onSubmit={onSubmit}>\r\n        <label style={{fontWeight: 700, paddingBottom: '3px'}} htmlFor=\"username\">아이디</label>\r\n        <StyledInput\r\n          autoComplete=\"username\"\r\n          id=\"username\"\r\n          name=\"username\"\r\n          placeholder=\"아이디\"\r\n          onChange={onChange}\r\n          value={form.username}\r\n        />\r\n\r\n<label style={{fontWeight: 700}} htmlFor=\"username\">비밀번호</label>\r\n        <StyledInput\r\n          autoComplete=\"new-password\"\r\n          name=\"password\"\r\n          placeholder=\"비밀번호\"\r\n          type=\"password\"\r\n          onChange={onChange}\r\n          value={form.password}\r\n        />\r\n<label style={{fontWeight: 700}} htmlFor=\"username\">비밀번호 확인</label>\r\n        <StyledInput\r\n            autoComplete=\"new-password\"\r\n            name=\"passwordConfirm\"\r\n            placeholder=\"비밀번호 확인\"\r\n            type=\"password\"  \r\n            onChange={onChange}\r\n            value={form.passwordConfirm}\r\n        />\r\n\r\n<label style={{fontWeight: 700}} htmlFor=\"username\">이메일</label>\r\n        <StyledInput\r\n            autoComplete=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"이메일 주소\"\r\n            type=\"text\"  \r\n            onChange={onChange}\r\n        />\r\n\r\n      {position === 'company' && (\r\n          <>\r\n            <label style={{fontWeight: 700}} htmlFor=\"username\">기관명</label>\r\n          <StyledInput\r\n            autoComplete=\"company-name\"\r\n            name=\"companyName\"\r\n            placeholder=\"기관명\"\r\n            type=\"text\"  \r\n            onChange={onChange}\r\n            value={form.companyName}\r\n          />\r\n        </>\r\n        )}\r\n\r\n        <label style={{fontWeight: 700}} htmlFor=\"username\">주소</label>\r\n          <StyledInput\r\n            autoComplete=\"address\"\r\n            name=\"address\"\r\n            placeholder=\"주소\"\r\n            type=\"address\"  \r\n            onChange={onChange}\r\n            value={form.address}\r\n        />\r\n\r\n        {/* <Button onClick={onAddress}>주소 찾기</Button>\r\n        <AskAddressModal \r\n            visible={modal}\r\n            onConfirm={onConfirm}\r\n            onCancel={onCancel} \r\n          /> */}\r\n        \r\n        <label style={{fontWeight: 700}} htmlFor=\"username\">전화번호</label>\r\n        <StyledInput\r\n            autoComplete=\"phone-number\"\r\n            name=\"phoneNumber\"\r\n            placeholder=\"전화번호\"\r\n            type=\"tel\"  \r\n            onChange={onChange}\r\n            value={form.phoneNumber}\r\n        />\r\n        {error === 409 && <ErrorMessage>이미 존재하는 아이디입니다.</ErrorMessage>}\r\n        {error === 400 && <ErrorMessage>회원 가입 양식을 지켜주세요.</ErrorMessage>}\r\n        <ButtonWithMarginTop green fullWidth>회원가입</ButtonWithMarginTop>\r\n      </form>\r\n      <Footer>\r\n          <Link to=\"/login\">로그인</Link>\r\n      </Footer>\r\n    </AuthFormBlock>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\n","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\auth\\Login.jsx",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\post\\Write.jsx",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\post\\UserApply.jsx",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\post\\PostList.jsx",["215"],"import React from 'react';\r\nimport Header from '../../components/common/Header';\r\nimport Button from '../../components/common/Button';\r\nimport StyledContainer from '../common/Container';\r\nimport styled from 'styled-components'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport Mainbanner from '../common/Mainbanner';\r\nimport { MdAssignment } from \"react-icons/md\";\r\nconst PostListBlock = styled.div`\r\nmargin-top:100px;\r\ntext-align:center;\r\n  h1{\r\n    text-align:center;\r\n    font-size:2.2rem;\r\n    font-weight:700;\r\n  }\r\n  p{\r\n    width:300px;\r\n    font-size:1.1rem;\r\n    height:100px;\r\n    text-align:center;\r\n    position:relative;\r\n    line-height:100px;\r\n    margin:0 auto;\r\n    color:#03c75a;\r\n  ::before{\r\n    content:'';\r\n    position:absolute;\r\n    top:20px;\r\n    left:50%;\r\n    transform:translateX(-50%);\r\n    width:25px;\r\n    height:2px;\r\n    background:#03c75a;\r\n  }\r\n  }\r\n  \r\n  button{\r\n    margin-right:30px\r\n  }\r\n  ul{\r\n    margin-top:100px;\r\n  }\r\n  li{\r\n    border-bottom:1px solid #ddd;\r\n    padding:15px 0;\r\n    color:#333;\r\n    text-align:center;\r\n  :nth-child(1){\r\n    background:#eee;\r\n    border-top:2px solid #ddd;\r\n    border-bottom:none;\r\n    span{\r\n      font-weight:700;\r\n    }\r\n  }\r\n  }\r\n  \r\n  span{\r\n    display:inline-block;\r\n    padding:0 5px\r\n  }\r\n  li span:nth-child(1){\r\n    width:5%;\r\n  }\r\n  li span:nth-child(2){\r\n    width:20%;\r\n  }\r\n  \r\n  li span:nth-child(3){\r\n    width:35%;\r\n    text-overflow:ellipsis;\r\n    white-space:nowrap;\r\n    word-wrap:normal;\r\n    overflow:hidden;\r\n    text-align:left;\r\n  }\r\n  li span:nth-child(4){\r\n    width:7%;\r\n  }\r\n  li span:nth-child(5){\r\n    width:25%;\r\n    color:#03c75a;\r\n  }\r\n  li span:nth-child(6){\r\n    width:8%;\r\n  }\r\n  li span.recruitTitle{\r\n    text-align:center\r\n  }\r\n  .postListIcon{\r\n    text-align:center;\r\n    font-size:2rem;\r\n    padding:20px 0;\r\n\r\n  }\r\n  `;\r\n  const PostListHeader = styled.div`\r\n  border-radius:20px; \r\n  display:inline-block;\r\n  `\r\nfunction PostList({ AuthState, ListState }) {\r\n  \r\n  return (\r\n    <div>\r\n      <Header AuthState={AuthState} />\r\n        <Mainbanner AuthState={AuthState}/>\r\n      <StyledContainer >\r\n        <PostListBlock>\r\n          <PostListHeader>\r\n            <div className=\"postListIcon\"><MdAssignment /></div>\r\n            <h1>봉사자 모집 공고</h1>\r\n            <p>봉사 지원자를 모집합니다.</p>\r\n          </PostListHeader>\r\n          <ul>\r\n            <li>\r\n              <span className=\"listNumber\">No</span>\r\n              <span className=\"recruitTitle\">회사이름</span>\r\n              <span className=\"recruitTitle\">제목</span>\r\n              <span className=\"recruitNumber\">인원수</span>\r\n              <span className=\"recruitPeriod\">기간</span>\r\n              <span className=\"recruitGender\">성별</span>\r\n            </li>\r\n            {ListState.lists.map((list,index,thisList) => (\r\n              <li key={list._id}>\r\n                <Link to={`${AuthState.login.username && '/@' + AuthState.login.username}/${list._id}`}>\r\n                  <span>{thisList.length-index}</span>\r\n                  <span>{list.companyName}</span>\r\n                  <span>{list.title}</span>\r\n                  <span>{list.number}</span>\r\n                  <span>{list.periodStart} ~ {list.periodEnd}</span>\r\n                  <span>{list.gender}</span>\r\n                </Link>\r\n              </li>\r\n            )\r\n            )}\r\n          </ul>\r\n        </PostListBlock>\r\n      </StyledContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(PostList);","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\lib\\api\\MapContainer.js",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\common\\Header.js",["216","217","218","219"],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\common\\Modal.js",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\common\\Mainbanner.js",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\post\\AskAddressModal.jsx",["220","221"],"import React, { useState } from 'react';\r\nimport AddressModal from '../common/AddressModal';\r\nimport AskModal from '../common/AskModal';\r\n\r\nconst AskAddressModal = ({visible, onConfirm, onCancel}) => {\r\n\r\n  return (\r\n    <AddressModal\r\n      visible={visible}\r\n      title=\"도로명 주소 찾기\"\r\n      // description=\"포스트를 정말 삭제하시겠습니까?\"\r\n      confirmText=\"확인\"\r\n      onConfirm={onConfirm}\r\n      onCancel={onCancel}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AskAddressModal;\r\n","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\post\\AskRemoveModal.jsx",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\common\\Responsive.js",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\lib\\api\\auth.js",[],"C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\common\\AddressModal.js",["222","223","224"],"import React from 'react';\r\nimport DaumPostcode from 'react-daum-postcode';\r\nimport styled from 'styled-components';\r\nimport FindAddr from '../../lib/api/AddressApi';\r\nimport Button from './Button';\r\n\r\nconst Fullscreen = styled.div`\r\n  position: fixed;\r\n  z-index: 30;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.25);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst AskModalBlock = styled.div`\r\n  width: 320px;\r\n  background: white;\r\n  padding: 1.5rem;\r\n  border-radius: 4px;\r\n  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.125);\r\n\r\n  h2 {\r\n    margin-top: 0;\r\n    margin-bottom: 1rem;\r\n  }\r\n  p {\r\n    margin-bottom: 3rem;\r\n  }\r\n  .buttons {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  height: 2rem;\r\n\r\n  & + & {\r\n    margin-left: 0.75rem;\r\n  }\r\n`;\r\n\r\nconst AddressModal = ({\r\n  visible,\r\n  title,\r\n  confirmText = '확인',\r\n  cancelText = '취소',\r\n  onConfirm,\r\n  onCancel,\r\n}) => {\r\n  const onClick = e => {\r\n    console.log(e.target);\r\n  };\r\n  if (!visible) return null;\r\n  return (\r\n    <Fullscreen>\r\n      {/* <AskModalBlock>\r\n        <h2>{title}</h2> */}\r\n      <FindAddr onClick={onClick} />\r\n      {/* <div className=\"buttons\">\r\n          <StyledButton onClick={onCancel}>{cancelText}</StyledButton>\r\n          <StyledButton cyan onClick={onConfirm}>\r\n            {confirmText}\r\n          </StyledButton>\r\n        </div>\r\n      </AskModalBlock> */}\r\n    </Fullscreen>\r\n  );\r\n};\r\n\r\nexport default AddressModal;\r\n","C:\\Users\\solan\\Documents\\Volunteer-HoC\\HoC-frontend\\src\\components\\common\\AskModal.js",["225"],"import React from 'react';\r\nimport DaumPostcode from 'react-daum-postcode';\r\nimport styled from 'styled-components';\r\nimport Button from './Button';\r\n\r\nconst Fullscreen = styled.div`\r\n  position: fixed;\r\n  z-index: 30;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.25);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst AskModalBlock = styled.div`\r\n  width: 320px;\r\n  background: white;\r\n  padding: 1.5rem;\r\n  border-radius: 4px;\r\n  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.125);\r\n\r\n  h2 {\r\n    margin-top: 0;\r\n    margin-bottom: 1rem;\r\n  }\r\n  p {\r\n    margin-bottom: 3rem;\r\n  }\r\n  .buttons {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  height: 2rem;\r\n\r\n  & + & {\r\n    margin-left: 0.75rem;\r\n  }\r\n`;\r\n\r\nconst AskModal = ({\r\n  visible,\r\n  title,\r\n  description,\r\n\r\n  confirmText = '확인',\r\n  cancelText = '취소',\r\n  onConfirm,\r\n  onCancel,\r\n}) => {\r\n  if (!visible) return null;\r\n  return (\r\n    <Fullscreen>\r\n      <AskModalBlock>\r\n        <h2>{title}</h2>\r\n        <p>{description}</p>\r\n        <div className=\"buttons\">\r\n          <StyledButton onClick={onCancel}>{cancelText}</StyledButton>\r\n          <StyledButton cyan onClick={onConfirm}>\r\n            {confirmText}\r\n          </StyledButton>\r\n        </div>\r\n      </AskModalBlock>\r\n    </Fullscreen>\r\n  );\r\n};\r\n\r\nexport default AskModal;\r\n",{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":3,"column":8,"nodeType":"232","messageId":"233","endLine":3,"endColumn":17},{"ruleId":"230","severity":1,"message":"234","line":3,"column":9,"nodeType":"232","messageId":"233","endLine":3,"endColumn":16},{"ruleId":"230","severity":1,"message":"235","line":28,"column":7,"nodeType":"232","messageId":"233","endLine":28,"endColumn":18},{"ruleId":"230","severity":1,"message":"236","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":27},{"ruleId":"230","severity":1,"message":"237","line":3,"column":8,"nodeType":"232","messageId":"233","endLine":3,"endColumn":10},{"ruleId":"230","severity":1,"message":"238","line":7,"column":56,"nodeType":"232","messageId":"233","endLine":7,"endColumn":72},{"ruleId":"230","severity":1,"message":"239","line":44,"column":7,"nodeType":"232","messageId":"233","endLine":44,"endColumn":17},{"ruleId":"230","severity":1,"message":"240","line":3,"column":22,"nodeType":"232","messageId":"233","endLine":3,"endColumn":26},{"ruleId":"230","severity":1,"message":"241","line":11,"column":10,"nodeType":"232","messageId":"233","endLine":11,"endColumn":21},{"ruleId":"230","severity":1,"message":"242","line":11,"column":41,"nodeType":"232","messageId":"233","endLine":11,"endColumn":56},{"ruleId":"243","severity":1,"message":"244","line":101,"column":6,"nodeType":"245","endLine":101,"endColumn":20,"suggestions":"246"},{"ruleId":"230","severity":1,"message":"247","line":16,"column":13,"nodeType":"232","messageId":"233","endLine":16,"endColumn":21},{"ruleId":"230","severity":1,"message":"248","line":2,"column":29,"nodeType":"232","messageId":"233","endLine":2,"endColumn":35},{"ruleId":"230","severity":1,"message":"249","line":25,"column":22,"nodeType":"232","messageId":"233","endLine":25,"endColumn":34},{"ruleId":"243","severity":1,"message":"250","line":117,"column":6,"nodeType":"245","endLine":117,"endColumn":8,"suggestions":"251"},{"ruleId":"230","severity":1,"message":"252","line":2,"column":8,"nodeType":"232","messageId":"233","endLine":2,"endColumn":20},{"ruleId":"230","severity":1,"message":"253","line":7,"column":8,"nodeType":"232","messageId":"233","endLine":7,"endColumn":23},{"ruleId":"230","severity":1,"message":"254","line":3,"column":8,"nodeType":"232","messageId":"233","endLine":3,"endColumn":14},{"ruleId":"230","severity":1,"message":"255","line":3,"column":16,"nodeType":"232","messageId":"233","endLine":3,"endColumn":26},{"ruleId":"230","severity":1,"message":"256","line":6,"column":3,"nodeType":"232","messageId":"233","endLine":6,"endColumn":15},{"ruleId":"230","severity":1,"message":"257","line":11,"column":10,"nodeType":"232","messageId":"233","endLine":11,"endColumn":15},{"ruleId":"230","severity":1,"message":"258","line":13,"column":8,"nodeType":"232","messageId":"233","endLine":13,"endColumn":23},{"ruleId":"230","severity":1,"message":"259","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":25},{"ruleId":"230","severity":1,"message":"260","line":3,"column":8,"nodeType":"232","messageId":"233","endLine":3,"endColumn":16},{"ruleId":"230","severity":1,"message":"252","line":2,"column":8,"nodeType":"232","messageId":"233","endLine":2,"endColumn":20},{"ruleId":"230","severity":1,"message":"261","line":20,"column":7,"nodeType":"232","messageId":"233","endLine":20,"endColumn":20},{"ruleId":"230","severity":1,"message":"262","line":40,"column":7,"nodeType":"232","messageId":"233","endLine":40,"endColumn":19},{"ruleId":"230","severity":1,"message":"252","line":2,"column":8,"nodeType":"232","messageId":"233","endLine":2,"endColumn":20},"no-native-reassign",["263"],"no-negated-in-lhs",["264"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'onClick' is assigned a value but never used.","'fullAddress' is assigned a value but never used.","'useContext' is defined but never used.","'qs' is defined but never used.","'MdAccountBalance' is defined but never used.","'StyledLink' is assigned a value but never used.","'Post' is defined but never used.","'CHECK_LOGIN' is defined but never used.","'INITAILIZE_FORM' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'PostDispatch' and 'PostState'. Either include them or remove the dependency array.","ArrayExpression",["265"],"'response' is assigned a value but never used.","'useRef' is defined but never used.","'AuthDispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'AuthDispatch' and 'parse'. Either include them or remove the dependency array.",["266"],"'DaumPostcode' is defined but never used.","'AskAddressModal' is defined but never used.","'Button' is defined but never used.","'withRouter' is defined but never used.","'CHANGE_FIELD' is defined but never used.","'login' is defined but never used.","'StyledContainer' is defined but never used.","'useState' is defined but never used.","'AskModal' is defined but never used.","'AskModalBlock' is assigned a value but never used.","'StyledButton' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},"Update the dependencies array to be: [AuthDispatch, PostDispatch, PostState]",{"range":"271","text":"272"},"Update the dependencies array to be: [AuthDispatch, parse]",{"range":"273","text":"274"},[2455,2469],"[AuthDispatch, PostDispatch, PostState]",[3280,3282],"[AuthDispatch, parse]"]